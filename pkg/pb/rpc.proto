syntax = "proto3";

option go_package = "github.com/AmazingTalker/at-member-manager/pkg/pb";

package pb;

import "third_party/google/api/annotations.proto";
import "third_party/gogoproto/gogo.proto";
import "third_party/amazingtalker/atproto.proto";

import "google/protobuf/timestamp.proto";

service AtMemberManager {
    // Health check api for k8s.
    rpc Health(HealthReq) returns (HealthRes) {
        option (google.api.http) = {
            get: "/health"
        };
    }

    rpc CreateMember(CreateMemberReq) returns (CreateMemberRes) {
    option (google.api.http) = {
            post: "/api/members"
            body: "member"
        }; 
    }

    rpc UpdateMember(UpdateMemberReq) returns (UpdateMemberRes) {
        option (google.api.http) = {
            put: "/api/members/:id"
            body: "member"
        };
    }

    rpc ListMembers(ListMembersReq) returns (ListMembersRes) {
        option (google.api.http) = {
            get: "/api/members"
            body: "members"
        };
    }

    rpc DeleteMember(DeleteMemberReq) returns (DeleteMemberRes) {
        option (google.api.http) = {
            delete: "/api/members/:id"
        };
    }
}

message Member {
    int64 id = 1 [(gogoproto.customname) = "ID"];
    string name = 2 [(gogoproto.customname) = "Name", json_name = "name", (gogoproto.jsontag) = "name"];
    google.protobuf.Timestamp birthday = 3 [(gogoproto.stdtime) = true, (gogoproto.customname) = "Birthday", (gogoproto.wktpointer) = true, json_name = "birthday", (gogoproto.jsontag) = "birthday"];
    google.protobuf.Timestamp created_at = 4 [(gogoproto.stdtime) = true, (gogoproto.customname) = "CreatedAt", (gogoproto.wktpointer) = true, json_name = "created_at", (gogoproto.jsontag) = "created_at"];
    google.protobuf.Timestamp updated_at = 5 [(gogoproto.stdtime) = true, (gogoproto.customname) = "UpdatedAt", (gogoproto.wktpointer) = true, json_name = "updated_at", (gogoproto.jsontag) = "updated_at"];
}

message HealthReq { }

message HealthRes {
    bool ok = 1;
}

message CreateMemberReq { 
    string name = 1 [(gogoproto.customname) = "Name", json_name = "name", (gogoproto.jsontag) = "name", (gogoproto.moretags)='validate:"required"'];
    google.protobuf.Timestamp birthday = 2 [(gogoproto.stdtime) = true, (gogoproto.customname) = "Birthday", (gogoproto.wktpointer) = true, json_name = "birthday", (gogoproto.jsontag) = "birthday", (gogoproto.moretags)='validate:"required"'];
}

message CreateMemberRes {
    option (atproto.success_http_status) = "201";
    Member member = 1[(gogoproto.customname) = "Member"];
}

message UpdateMemberReq { 
    string id = 1 [(gogoproto.customname) = "ID", json_name = "id", (gogoproto.jsontag) = "id", (atproto.frparams) = "true"];
    string name = 2 [(gogoproto.customname) = "Name", json_name = "name", (gogoproto.jsontag) = "name", (gogoproto.moretags)='validate:"required"'];
    google.protobuf.Timestamp birthday = 3 [(gogoproto.stdtime) = true, (gogoproto.customname) = "Birthday", (gogoproto.wktpointer) = true, json_name = "birthday", (gogoproto.jsontag) = "birthday", (gogoproto.moretags)='validate:"required"'];
}

message UpdateMemberRes {
    option (atproto.success_http_status) = "200";
    Member member = 1 [(gogoproto.customname) = "Member"];
}

message ListMembersReq { }

message ListMembersRes {
    option (atproto.success_http_status) = "200";
    repeated Member members = 1 [(gogoproto.customname) = "Members"];
}

message DeleteMemberReq { 
    string id = 1 [(gogoproto.customname) = "ID", json_name = "id", (gogoproto.jsontag) = "id", (atproto.frparams) = "true"];
}

message DeleteMemberRes {
    option (atproto.success_http_status) = "204";
}
